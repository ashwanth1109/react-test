{"version":3,"sources":["assets/search.svg","assets/star.svg","assets/company.svg","assets/location.svg","assets/email.svg","assets/url-link.svg","assets/tick.svg","assets/tick-white.svg","store.js","components/UserDisplay.js","components/Button.js","components/Loader.js","pages/index.js","components/WhiteButton.js","components/RepoDisplay.js","components/InfoRow.js","components/MenuItem.js","components/Menu.js","components/ShowHeader.js","pages/show.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","createStore","combineReducers","userList","state","arguments","length","undefined","action","type","users","buttonLoading","selectedUser","user","sortParameter","menuState","repos","showUser","history","updateUser","console","log","push","concat","login","React","memo","_ref","react_default","a","createElement","style","display","flexDirection","padding","borderTop","src","avatar_url","width","height","margin","cursor","alt","onClick","fontSize","color","alignItems","s","container","justifyContent","backgroundColor","children","dot","borderRadius","marginLeft","marginRight","Object","objectSpread","animation","searchContainer","position","searchIconContainer","search","boxSizing","searchIcon","IndexPage","fetchData","_callee","searchTerm","regenerator_default","wrap","_context","prev","next","_this","props","updateUserList","refs","value","updateButtonLoading","fetch","sent","json","then","data","items","catch","err","t0","error","stop","this","render","_ref2","placeholder","ref","components_Loader","components_Button","map","id","components_UserDisplay","key","Component","connect","dispatch","backgroundImage","border","marginBottom","_ref$onClick","title","fontWeight","description","lineHeight","maxWidth","repo","flex","name","components_WhiteButton","star","imageContainer","text","whiteSpace","overflow","textOverflow","link","image","className","borderContainer","borderBottom","selected","option","tick","MenuItem","hover","onMouseEnter","setState","onMouseLeave","tickWhite","bottom","right","boxShadow","header","sortParameters","Menu","sortOption","updateSelected","components_MenuItem","ShowHeader","showMenu","goBack","updateSortParameter","toggleMenu","components_Menu","_updateSortParameter","asyncToGenerator","mark","res","_x","_x2","apply","profileRepoContainer","profile","avatar","followButton","blockInfo","paddingBottom","ShowPage","message","componentDidMount","updateRepos","res1","_args","_ref3","components_ShowHeader","components_InfoRow","company","location","email","url","blog","components_RepoDisplay","App","es","store","Fragment","BrowserRouter","basename","process","Route","exact","path","component","ReactDOM","src_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yOCkDzBC,cACXC,YAAgB,CACZC,SAzCS,eAACC,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAS,GAAIG,EAAbH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,MACG,qBAAhBC,EAAOC,KAA8BD,EAAOE,MAAQN,GAyChDO,cAjCc,eAACP,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAgBG,EAAhBH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,MACF,uBAAhBC,EAAOC,KAAgCD,EAAOG,cAAgBP,GAiC1DQ,aAxCa,eAACR,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAS,KAAMG,EAAfH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,MACD,gBAAhBC,EAAOC,KAAyBD,EAAOK,KAAOT,GAwC1CU,cA7Bc,eAACV,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAS,EAAGG,EAAZH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,MACF,mBAAhBC,EAAOC,KAA4BD,EAAOM,cAAgBV,GA6BtDW,UAxBU,eAACX,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAgBG,EAAhBH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,MACE,eAAhBC,EAAOC,KAAwBD,EAAOO,UAAYX,GAwB9CS,KAnBK,eAACT,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAS,KAAMG,EAAfH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,MACO,SAAhBC,EAAOC,KAAkBD,EAAOK,KAAOT,GAmBnCY,MAdM,eAACZ,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAS,GAAIG,EAAbH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,MACM,UAAhBC,EAAOC,KAAmBD,EAAOQ,MAAQZ,+DC3CvCa,EAAW,SAACJ,EAAMK,EAASC,GAC7BC,QAAQC,IAAIR,GACZM,EAAWN,GACXK,EAAQI,KAAR,SAAAC,OAAsBV,EAAKW,SAuChBC,MAAMC,KApCD,SAAAC,GAAA,IAAGd,EAAHc,EAAGd,KAAMK,EAATS,EAAST,QAASC,EAAlBQ,EAAkBR,WAAlB,OAChBS,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACHC,QAAS,OACTC,cAAe,MACfC,QAAS,SACTC,UAAW,wBAGfP,EAAAC,EAAAC,cAAA,OACIM,IAAKvB,EAAKwB,WACVN,MAAO,CACHO,MAAO,OACPC,OAAQ,OACRC,OAAQ,SACRC,OAAQ,WAEZC,IAAI,qBACJC,QAAS,kBAAM1B,EAASJ,EAAMK,EAASC,MAE3CS,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACHa,SAAU,OACVC,MAAO,UACPN,OAAQ,OACRP,QAAS,OACTc,WAAY,SACZL,OAAQ,WAEZE,QAAS,kBAAM1B,EAASJ,EAAMK,EAASC,KAEtCN,EAAKW,UCrCZuB,EAAI,CACNC,UAAW,CACPV,MAAO,QACPC,OAAQ,OACRP,QAAS,OACTiB,eAAgB,SAChBH,WAAY,SACZI,gBAAiB,OACjBL,MAAO,OACPJ,OAAQ,YASDhB,MAAMC,KANN,SAAAC,GAAA,IAAGgB,EAAHhB,EAAGgB,QAASQ,EAAZxB,EAAYwB,SAAZ,OACXvB,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,EAAEC,UAAWL,QAAS,kBAAMA,MACnCQ,aCdHJ,EAAI,CACNC,UAAW,CACPV,MAAO,QACPC,OAAQ,OACRP,QAAS,OACTiB,eAAgB,SAChBH,WAAY,SACZb,cAAe,MACfiB,gBAAiB,QAErBE,IAAK,CACDd,MAAO,MACPC,OAAQ,MACRc,aAAc,MACdH,gBAAiB,OACjBI,WAAY,MACZC,YAAa,QA2BN9B,MAAMC,KAvBN,kBACXE,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,EAAEC,WACVpB,EAAAC,EAAAC,cAAA,OACIC,MAAKyB,OAAAC,EAAA,EAAAD,CAAA,GACET,EAAEK,IADJ,CAEDM,UAAW,gCAGnB9B,EAAAC,EAAAC,cAAA,OACIC,MAAKyB,OAAAC,EAAA,EAAAD,CAAA,GACET,EAAEK,IADJ,CAEDM,UAAW,mCAGnB9B,EAAAC,EAAAC,cAAA,OACIC,MAAKyB,OAAAC,EAAA,EAAAD,CAAA,GACET,EAAEK,IADJ,CAEDM,UAAW,qCCTrBX,EAAI,CACNC,UAAW,CACPV,MAAO,SACPE,OAAQ,aAEZmB,gBAAiB,CACbC,SAAU,WACVrB,OAAQ,OACRP,QAAS,OACTC,cAAe,MACfO,OAAQ,UAEZqB,oBAAqB,CACjBD,SAAU,WACV5B,QAAS,OACTO,OAAQ,OACRD,MAAO,OACPW,eAAgB,SAChBH,WAAY,UAEhBgB,OAAQ,CACJ5B,QAAS,YACT0B,SAAU,WACVrB,OAAQ,OACRwB,UAAW,aACXzB,MAAO,QACPM,SAAU,QAEdoB,WAAY,CACRzB,OAAQ,QAIV0B,6MAOFC,+BAAY,SAAAC,IAAA,IAAAC,EAAA,OAAAC,EAAAxC,EAAAyC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACRC,EAAKC,MAAMC,eAAe,IAEP,MADbR,EAAaM,EAAKG,KAAKf,OAAOgB,OAF5B,CAAAP,EAAAE,KAAA,gBAIJC,EAAKC,MAAMI,qBAAoB,GAJ3BR,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMkBO,MAAK,yCAAAzD,OACsB6C,IAP7C,OAAAG,EAAAU,KAUIC,OACCC,KAAK,SAAAC,GACFV,EAAKC,MAAMC,eAAeQ,EAAKC,OAC/BX,EAAKC,MAAMI,qBAAoB,KAElCO,MAAM,SAAAC,GACH,MAAMA,IAhBdhB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,SAmBAnD,QAAQqE,MAARlB,EAAAiB,IAnBA,yBAAAjB,EAAAmB,SAAAvB,EAAAwB,KAAA,eAwBZC,OAAS,WAEJ,IAAAC,EAAAxF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADkDqE,EAAKC,MAAtDxE,EACD0F,EADC1F,SAAUQ,EACXkF,EADWlF,cAAeO,EAC1B2E,EAD0B3E,QAASC,EACnC0E,EADmC1E,WAEpC,OACIS,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,EAAEC,WACVpB,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,EAAEY,iBACV/B,EAAAC,EAAAC,cAAA,SACIrB,KAAK,OACLqF,YAAY,mBACZ/D,MAAOgB,EAAEe,OACTiC,IAAI,WAERnE,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,EAAEc,qBACVjC,EAAAC,EAAAC,cAAA,OAAKM,IAAK0B,IAAQpB,IAAI,SAASX,MAAOgB,EAAEiB,cAE5CpC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEO,MAAO,QAASC,OAAQ,UACrC5B,EACGiB,EAAAC,EAAAC,cAACkE,EAAD,MAEApE,EAAAC,EAAAC,cAACmE,EAAD,CAAQtD,QAAS,kBAAM+B,EAAKR,cAA5B,WAGP/D,EAAS+F,IAAI,SAACrF,EAAMsF,GAAP,OACVvE,EAAAC,EAAAC,cAACsE,EAAD,CACIC,IAAKF,EACLtF,KAAMA,EACNK,QAASA,EACTC,WAAYA,qCA1DZM,IAAM6E,WAkEfC,cAzHW,SAAAnG,GAEtB,OADAgB,QAAQC,IAAIjB,GACLA,GAGgB,SAAAoG,GAAQ,MAAK,CACpC5B,eAAgB,SAAAlE,GAAK,OACjB8F,EAAS,CACL/F,KAAM,mBACNC,MAAOA,KAGfqE,oBAAqB,SAAApE,GAAa,OAC9B6F,EAAS,CAAE/F,KAAM,qBAAsBE,cAAeA,KAE1DQ,WAAY,SAAAN,GAAI,OACZ2F,EAAS,CACL/F,KAAM,cACNI,KAAMA,OAuGH0F,CAGbtC,GClIIlB,EACY,CACVG,gBAAiB,UACjBuD,gBAAiB,+CACjBC,OAAQ,8BACR1E,QAAS,OACTiB,eAAgB,SAChBH,WAAY,SACZD,MAAO,UACP8D,aAAc,OACdlE,OAAQ,WAIVpB,EAAM,kBAAMD,QAAQC,IAAI,uBAWfI,MAAMC,KATD,SAAAC,GAAA,IAAGwB,EAAHxB,EAAGwB,SAAUb,EAAbX,EAAaW,MAAOC,EAApBZ,EAAoBY,OAApBqE,EAAAjF,EAA4BgB,eAA5B,IAAAiE,EAAsCvF,EAAtCuF,EAAA,OAChBhF,EAAAC,EAAAC,cAAA,OACIC,MAAKyB,OAAAC,EAAA,EAAAD,CAAA,GAAOT,EAAP,CAAuBT,MAAOA,EAAOC,OAAQA,IAClDI,QAAS,kBAAMA,MAEdQ,sBCnBHJ,EAAI,CACNC,UAAW,CACPd,QAAS,SACTC,UAAW,sBACXH,QAAS,OACTC,cAAe,OAEnB4E,MAAO,CACHhE,MAAO,UACPJ,OAAQ,UACRqE,WAAY,MACZlE,SAAU,OACV+D,aAAc,QAElBI,YAAa,CACTlE,MAAO,UACPD,SAAU,OACVoE,WAAY,MACZC,SAAU,UAuBHxF,MAAMC,KAnBD,SAAAC,GAAA,IAAGuF,EAAHvF,EAAGuF,KAAH,OAChBtF,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,EAAEC,WACVpB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEoF,KAAM,IAChBvF,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,EAAE8D,OAAQK,EAAKE,MAC3BxF,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,EAAEgE,aAAcG,EAAKH,cAErCnF,EAAAC,EAAAC,cAACuF,EAAD,CAAa/E,MAAM,OAAOC,OAAO,QAC7BX,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OACIM,IAAKkF,IACL5E,IAAI,OACJX,MAAO,CAAEO,MAAO,OAAQiB,YAAa,SAJ7C,gFC/BNR,EAAI,CACNC,UAAW,CACPV,MAAO,OACPN,QAAS,OACTC,cAAe,OAEnBsF,eAAgB,CACZjF,MAAO,OACPC,OAAQ,OACRP,QAAS,OACTC,cAAe,MACfgB,eAAgB,SAChB0D,aAAc,QAElBa,KAAM,CACFL,KAAM,IACNM,WAAY,SACZC,SAAU,SACVpE,WAAY,OACZqE,aAAc,WACdX,WAAY,MACZpE,SAAU,QAEdgF,KAAM,CACF/E,MAAO,UACPJ,OAAQ,YAsBDhB,MAAMC,KAlBL,SAAAC,GAA+B,IAA5BkG,EAA4BlG,EAA5BkG,MAAO1E,EAAqBxB,EAArBwB,SAAUyE,EAAWjG,EAAXiG,KAChC,OAAIzE,EAEIvB,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,EAAEC,WACVpB,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,EAAEwE,gBACV3F,EAAAC,EAAAC,cAAA,OAAKM,IAAKyF,EAAOnF,IAAI,OAAOX,MAAO,CAAEQ,OAAQ,WAEjDX,EAAAC,EAAAC,cAAA,OACIC,MAAKyB,OAAAC,EAAA,EAAAD,CAAA,GAAOT,EAAEyE,KAAUI,EAAO7E,EAAE6E,KAAO,MACxCE,UAAWF,EAAO,OAAS,IAE1BzE,IAIH,yCC1CZJ,EAAI,CACNC,UAAW,CACPV,MAAO,OACPC,OAAQ,QAEZwF,gBAAiB,CACbzF,MAAO,MACP0F,aAAc,sBACdhG,QAAS,OACTC,cAAe,MACfM,OAAQ,QAEZ0F,SAAU,CACN3F,MAAO,OACPC,OAAQ,OACRP,QAAS,OACTiB,eAAgB,SAChBH,WAAY,UAEhBoF,OAAQ,CACJf,KAAM,EACN5E,OAAQ,OACRP,QAAS,OACTC,cAAe,MACfa,WAAY,UAEhBqF,KAAM,CACF7F,MAAO,SAmCA8F,8MA9BXhI,MAAQ,CACJiI,OAAO,KAEXzC,OAAS,eAAAjE,EAAAtB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAC6BqE,EAAKC,MAArCxB,EADGxB,EACHwB,SAAU8E,EADPtG,EACOsG,SAAUtF,EADjBhB,EACiBgB,QACpB0F,GAFGhI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAEOqE,EAAKtE,OAAfiI,MAFG,OAILzG,EAAAC,EAAAC,cAAA,OACIC,MAAOgB,EAAEC,UACT8E,UAAU,SACVQ,aAAc,kBAAM5D,EAAK6D,SAAS,CAAEF,OAAO,KAC3CG,aAAc,kBAAM9D,EAAK6D,SAAS,CAAEF,OAAO,KAC3C1F,QAAS,kBAAMA,MAEff,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,EAAEgF,iBACVnG,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,EAAEkF,UACTA,EACGI,EACIzG,EAAAC,EAAAC,cAAA,OAAKM,IAAKqG,IAAW/F,IAAI,OAAOX,MAAOgB,EAAEoF,OAEzCvG,EAAAC,EAAAC,cAAA,OAAKM,IAAK+F,IAAMzF,IAAI,OAAOX,MAAOgB,EAAEoF,OAExC,MAERvG,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,EAAEmF,QAAS/E,mCAzBhB1B,IAAM6E,WChCvBvD,GAAI,CACNC,UAAW,CACPY,SAAU,WACV8E,OAAQ,SACRC,MAAO,OACPrG,MAAO,QACPC,OAAQ,QACRmE,OAAQ,+BACRrD,aAAc,MACduF,UAAW,gCACX/F,MAAO,UACPD,SAAU,OACVJ,OAAQ,eACRU,gBAAiB,QAErB2F,OAAQ,CACJ3F,gBAAiB,UACjB8E,aAAc,oBACdhB,WAAY,OACZ9E,QAAS,WACTW,MAAO,OACPiE,WAAY,QAIdgC,GAAiB,CAAC,UAAW,UAAW,SAAU,aAqBzCC,oLAlByC,IAAApH,EAAAtB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZsF,KAAKhB,MAApCqE,EAA2CrH,EAA3CqH,WAAYC,EAA+BtH,EAA/BsH,eACjB,OACIrH,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,GAAEC,WACVpB,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,GAAE8F,QAAd,0BACCC,GAAe5C,IAAI,SAACpF,EAAeqF,GAAhB,OAChBvE,EAAAC,EAAAC,cAACoH,GAAD,CACI7C,IAAKF,EACL8B,SAAUe,IAAe7C,EACzBxD,QAAS,kBAAMsG,EAAe9C,KAE7BrF,aAXNW,IAAM6E,WCxBnBwC,GAAiB,CAAC,UAAW,UAAW,SAAU,aAuClDK,8MACF/I,MAAQ,CACJgJ,UAAU,KAEdC,OAAS,SAAAnI,GAAO,OAAIA,EAAQI,KAAK,QAEjCsE,OAAS,WASJ,IAAAjE,EAAAtB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADGqE,EAAKC,MANLzD,EAOHS,EAPGT,QACAJ,EAMHa,EANGb,cACAwI,EAKH3H,EALG2H,oBACAvI,EAIHY,EAJGZ,UACAwI,EAGH5H,EAHG4H,WACA3I,EAEHe,EAFGf,aAGJ,OACIgB,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACHoF,KAAM,EACNlF,cAAe,MACfD,QAAS,OACTiB,eAAgB,kBAGpBrB,EAAAC,EAAAC,cAACmE,EAAD,CAAQtD,QAAS,kBAAM+B,EAAK2E,OAAOnI,KAAnC,QACAU,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACHO,MAAO,QACPC,OAAQ,OACRqB,SAAU,aAGdhC,EAAAC,EAAAC,cAACuF,EAAD,CACI/E,MAAM,QACNC,OAAO,OACPI,QAAS,kBAAM4G,GAAYxI,KAH/B,SAKW+H,GAAehI,IAEzBC,EACGa,EAAAC,EAAAC,cAAC0H,GAAD,CACIR,WAAYlI,EACZmI,eAAgB,SAAA9C,GAAE,OACdmD,EAAoBnD,EAAIvF,MAGhC,qCA/CCa,IAAM6E,WAsDhBC,eA3FW,SAAAnG,GACtB,OAAOA,GAGgB,SAAAoG,GAAQ,MAAK,CACpC+C,WAAY,SAAAxI,GACRyF,EAAS,CACL/F,KAAM,aACNM,UAAWA,KAGnBuI,oBAAmB,eAAAG,EAAAjG,OAAAkG,EAAA,EAAAlG,CAAAa,EAAAxC,EAAA8H,KAAE,SAAAxF,EAAOrD,EAAeF,GAAtB,IAAAgJ,EAAA5I,EAAA,OAAAqD,EAAAxC,EAAAyC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACjB+B,EAAS,CACL/F,KAAM,iBACNK,cAAeA,IAEnB0F,EAAS,CACL/F,KAAM,aACNM,WAAW,IAPEwD,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAUKO,MAAK,gCAAAzD,OAEfX,EAAaY,MAFE,gBAAAD,OAGJuH,GAAehI,KAbrB,cAUP8I,EAVOrF,EAAAU,KAAAV,EAAAE,KAAA,EAeOmF,EAAI1E,OAfX,OAePlE,EAfOuD,EAAAU,KAgBbuB,EAAS,CACL/F,KAAM,QACNO,MAAOA,IAlBEuD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,SAqBbnD,QAAQqE,MAARlB,EAAAiB,IArBa,yBAAAjB,EAAAmB,SAAAvB,EAAAwB,KAAA,aAAF,gBAAAkE,EAAAC,GAAA,OAAAL,EAAAM,MAAApE,KAAAtF,YAAA,KAgFRkG,CAGb4C,ICrEIpG,GAAI,CACNC,UAAW,CACPV,MAAO,SACPE,OAAQ,YACRR,QAAS,OACTC,cAAe,UAEnB+H,qBAAsB,CAClB1H,MAAO,OACPN,QAAS,OACTC,cAAe,OAEnBgI,QAAS,CACL3H,MAAO,QACPJ,QAAS,OACTF,QAAS,OACTC,cAAe,UAEnBjB,MAAO,CACHmG,KAAM,EACNjF,QAAS,QAEbgI,OAAQ,CACJ5H,MAAO,OACPqE,aAAc,OACdtD,aAAc,QAElB+D,KAAM,CACFxE,SAAU,OACVoE,WAAY,OACZF,WAAY,OAEhBtF,MAAO,CACHoB,SAAU,OACVC,MAAO,OACP8D,aAAc,QAElBwD,aAAc,CACV7H,MAAO,OACPC,OAAQ,OACRW,gBAAiB,UACjBuD,gBAAiB,+CACjBC,OAAQ,8BACR1E,QAAS,OACTiB,eAAgB,SAChBH,WAAY,SACZD,MAAO,UACP8D,aAAc,QAElByD,UAAW,CACPvH,MAAO,UACPD,SAAU,OACVoE,WAAY,MACZqD,cAAe,OACf1D,aAAc,OACdqB,aAAc,wBAIhBc,GAAiB,CAAC,UAAW,UAAW,SAAU,aAElDwB,8MACFlK,MAAQ,CACJmK,QAAS,yBAEbC,uCAAoB,SAAArG,IAAA,IAAA0B,EAAAjF,EAAAE,EAAAK,EAAAsJ,EAAAb,EAAAc,EAAA7J,EAAAG,EAAA2J,EAAAtK,UAAA,OAAAgE,EAAAxC,EAAAyC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAoB,EAAA8E,EAAArK,OAAA,QAAAC,IAAAoK,EAAA,GAAAA,EAAA,GAC2CjG,EAAKC,MAA9D/D,EADciF,EACdjF,aAAcE,EADA+E,EACA/E,cAAeK,EADf0E,EACe1E,WAAYsJ,EAD3B5E,EAC2B4E,aAErC7J,EAHU,CAAA2D,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKUO,MAAK,gCAAAzD,OACaX,EAAaY,QANzC,cAKFoI,EALErF,EAAAU,KAAAV,EAAAE,KAAA,EAQWO,MAAK,gCAAAzD,OAEhBX,EAAaY,MAFG,gBAAAD,OAGLuH,GAAehI,KAX1B,cAQF4J,EAREnG,EAAAU,KAAAV,EAAAE,KAAA,GAaWmF,EAAI1E,OAbf,eAaFrE,EAbE0D,EAAAU,KAcR9D,EAAWN,GAdH0D,EAAAE,KAAA,GAeYiG,EAAKxF,OAfjB,QAeFlE,EAfEuD,EAAAU,KAgBRwF,EAAYzJ,GAhBJuD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,SAkBRnD,QAAQqE,MAARlB,EAAAiB,IAlBQ,QAAAjB,EAAAE,KAAA,iBAqBZC,EAAK6D,SAAS,CACVgC,QAAS,mBAtBD,yBAAAhG,EAAAmB,SAAAvB,EAAAwB,KAAA,eA2BpBC,OAAS,WAGJ,IAAAgF,EAAAvK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFwCqE,EAAKC,MAA9BzD,GAEf0J,EAFChK,aAEDgK,EAFe1J,SAASL,EAExB+J,EAFwB/J,KAAMG,EAE9B4J,EAF8B5J,MAC7BuJ,GACDlK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADaqE,EAAKtE,OAAjBmK,QAEF,OAAM1J,EAGEe,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,GAAEC,WACVpB,EAAAC,EAAAC,cAAC+I,GAAD,CAAY3J,QAASA,IACrBU,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,GAAEiH,sBACVpI,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,GAAEkH,SACVrI,EAAAC,EAAAC,cAAA,OACIM,IAAKvB,EAAKwB,WACVN,MAAOgB,GAAEmH,OACTxH,IAAI,SAERd,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,GAAEqE,MAAOvG,EAAKuG,MAC1BxF,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,GAAEvB,OAAQX,EAAKW,OAC3BI,EAAAC,EAAAC,cAACuF,EAAD,CAAa/E,MAAM,OAAOC,OAAO,QAAjC,UAGAX,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,GAAEqH,WAAd,wBACAxI,EAAAC,EAAAC,cAACgJ,EAAD,CAASjD,MAAOkD,KAAUlK,EAAKkK,SAC/BnJ,EAAAC,EAAAC,cAACgJ,EAAD,CAASjD,MAAOmD,KAAWnK,EAAKmK,UAChCpJ,EAAAC,EAAAC,cAACgJ,EAAD,CAASjD,MAAOoD,IAAOrD,MAAI,GACtB/G,EAAKoK,OAEVrJ,EAAAC,EAAAC,cAACgJ,EAAD,CAASjD,MAAOqD,IAAKtD,MAAI,GACpB/G,EAAKsK,OAGdvJ,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,GAAE/B,OACTA,EAAMkF,IAAI,SAACgB,EAAMf,GAAP,OACPvE,EAAAC,EAAAC,cAACsJ,EAAD,CAAa/E,IAAKF,EAAIe,KAAMA,SAQ5CtF,EAAAC,EAAAC,cAAA,OAAKC,MAAOgB,GAAEC,WACVpB,EAAAC,EAAAC,cAAC+I,GAAD,CAAY3J,QAASA,IACrBU,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACHS,OAAQ,SACRF,MAAO,OACPN,QAAS,OACTC,cAAe,MACfgB,eAAgB,WAGnBsH,kCAnFF9I,IAAM6E,WA2FdC,eA5KW,SAAAnG,GAEtB,OADAgB,QAAQC,IAAIjB,GACLA,GAGgB,SAAAoG,GACvB,MAAO,CACHrF,WAAY,SAAAN,GAAI,OACZ2F,EAAS,CACL/F,KAAM,OACNI,KAAMA,KAEd4J,YAAa,SAAAzJ,GAAK,OACdwF,EAAS,CACL/F,KAAM,QACNO,MAAOA,OA6JRuF,CAGb+D,ICpKae,oLAfP,OACIzJ,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAUC,MAAOA,GACb3J,EAAAC,EAAAC,cAACF,EAAAC,EAAM2J,SAAP,KACI5J,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAQC,SAAUC,eACd/J,EAAAC,EAAAC,cAACF,EAAAC,EAAM2J,SAAP,KACI5J,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9H,IACjCrC,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWzB,gBARzChE,aCFlB0F,IAASpG,OAAOhE,EAAAC,EAAAC,cAACmK,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.5793aa29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.2e5a42b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.d0166397.svg\";","module.exports = __webpack_public_path__ + \"static/media/company.4f10af18.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.d9959130.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.1c4738bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/url-link.a6e87767.svg\";","module.exports = __webpack_public_path__ + \"static/media/tick.c0cbd084.svg\";","module.exports = __webpack_public_path__ + \"static/media/tick-white.a95a4ea8.svg\";","import { createStore, combineReducers } from \"redux\";\n\n// ------------------------------------------------------------\n// Test Reducer\n// ------------------------------------------------------------\n// const test = (state = \"Hello React\", action) =>\n//     action.type === \"TEST\" ? action.value : state;\n\n// ------------------------------------------------------------\n// User List Reducer\n// ------------------------------------------------------------\nconst userList = (state = [], action) =>\n    action.type === \"UPDATE_USER_LIST\" ? action.users : state;\n\nconst selectedUser = (state = null, action) =>\n    action.type === \"UPDATE_USER\" ? action.user : state;\n\n// ------------------------------------------------------------\n// Button Loading Reducer\n// ------------------------------------------------------------\nconst buttonLoading = (state = false, action) =>\n    action.type === \"SET_BUTTON_LOADING\" ? action.buttonLoading : state;\n\n// ------------------------------------------------------------\n// Sort Parameter Reducer\n// ------------------------------------------------------------\nconst sortParameter = (state = 3, action) =>\n    action.type === \"SORT_PARAMETER\" ? action.sortParameter : state;\n\n// ------------------------------------------------------------\n// Menu State Reducer\n// ------------------------------------------------------------\nconst menuState = (state = false, action) =>\n    action.type === \"MENU_STATE\" ? action.menuState : state;\n\n// ------------------------------------------------------------\n// User Reducer\n// ------------------------------------------------------------\nconst user = (state = null, action) =>\n    action.type === \"USER\" ? action.user : state;\n\n// ------------------------------------------------------------\n// Repos Reducer\n// ------------------------------------------------------------\nconst repos = (state = [], action) =>\n    action.type === \"REPOS\" ? action.repos : state;\n\n// ------------------------------------------------------------\n// Export Store\n// ------------------------------------------------------------\nexport default createStore(\n    combineReducers({\n        userList,\n        buttonLoading,\n        selectedUser,\n        sortParameter,\n        menuState,\n        user,\n        repos\n    })\n);\n","import React from \"react\";\n\nconst showUser = (user, history, updateUser) => {\n    console.log(user);\n    updateUser(user);\n    history.push(`/user/${user.login}`);\n};\n\nconst UserDisplay = ({ user, history, updateUser }) => (\n    <div\n        style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            padding: \"20px 0\",\n            borderTop: \"1px solid #33333320\"\n        }}\n    >\n        <img\n            src={user.avatar_url}\n            style={{\n                width: \"50px\",\n                height: \"50px\",\n                margin: \"0 20px\",\n                cursor: \"pointer\"\n            }}\n            alt=\"github user avatar\"\n            onClick={() => showUser(user, history, updateUser)}\n        />\n        <div\n            style={{\n                fontSize: \"16px\",\n                color: \"#0366d6\",\n                height: \"50px\",\n                display: \"flex\",\n                alignItems: \"center\",\n                cursor: \"pointer\"\n            }}\n            onClick={() => showUser(user, history, updateUser)}\n        >\n            {user.login}\n        </div>\n    </div>\n);\n\nexport default React.memo(UserDisplay);\n","import React from \"react\";\n\nconst s = {\n    container: {\n        width: \"100px\",\n        height: \"35px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#333\",\n        color: \"#fff\",\n        cursor: \"pointer\"\n    }\n};\nconst Button = ({ onClick, children }) => (\n    <div style={s.container} onClick={() => onClick()}>\n        {children}\n    </div>\n);\n\nexport default React.memo(Button);\n","import React from \"react\";\n\nconst s = {\n    container: {\n        width: \"100px\",\n        height: \"35px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        backgroundColor: \"#333\"\n    },\n    dot: {\n        width: \"8px\",\n        height: \"8px\",\n        borderRadius: \"4px\",\n        backgroundColor: \"#FFF\",\n        marginLeft: \"3px\",\n        marginRight: \"3px\"\n    }\n};\n\nconst Loader = () => (\n    <div style={s.container}>\n        <div\n            style={{\n                ...s.dot,\n                animation: \"loadingDot 1s 0s infinite\"\n            }}\n        />\n        <div\n            style={{\n                ...s.dot,\n                animation: \"loadingDot 1s 0.25s infinite\"\n            }}\n        />\n        <div\n            style={{\n                ...s.dot,\n                animation: \"loadingDot 1s 0.5s infinite\"\n            }}\n        />\n    </div>\n);\n\nexport default React.memo(Loader);\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport search from \"../assets/search.svg\";\nimport UserDisplay from \"../components/UserDisplay\";\nimport Button from \"../components/Button\";\nimport Loader from \"../components/Loader\";\n\nconst mapStateFromProps = state => {\n    console.log(state);\n    return state;\n};\n\nconst mapDispatchToProps = dispatch => ({\n    updateUserList: users =>\n        dispatch({\n            type: \"UPDATE_USER_LIST\",\n            users: users\n        }),\n\n    updateButtonLoading: buttonLoading =>\n        dispatch({ type: \"SET_BUTTON_LOADING\", buttonLoading: buttonLoading }),\n\n    updateUser: user =>\n        dispatch({\n            type: \"UPDATE_USER\",\n            user: user\n        })\n});\n\nconst s = {\n    container: {\n        width: \"1000px\",\n        margin: \"24px auto\"\n    },\n    searchContainer: {\n        position: \"relative\",\n        height: \"35px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        margin: \"50px 0\"\n    },\n    searchIconContainer: {\n        position: \"absolute\",\n        display: \"flex\",\n        height: \"35px\",\n        width: \"30px\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    search: {\n        padding: \"10px 30px\",\n        position: \"absolute\",\n        height: \"35px\",\n        boxSizing: \"border-box\",\n        width: \"250px\",\n        fontSize: \"16px\"\n    },\n    searchIcon: {\n        height: \"50%\"\n    }\n};\n\nclass IndexPage extends React.Component {\n    // async componentDidMount() {\n    //     const res = await fetch(\"https://api.github.com/search/users?q=diaz\");\n    //     const data = await res.json();\n    //     this.props.updateUserList(data.items);\n    // }\n\n    fetchData = async () => {\n        this.props.updateUserList([]);\n        const searchTerm = this.refs.search.value;\n        if (searchTerm !== \"\") {\n            this.props.updateButtonLoading(true);\n            try {\n                const res = await fetch(\n                    `https://api.github.com/search/users?q=${searchTerm}`\n                );\n                // const data = await res.json();\n                res.json()\n                    .then(data => {\n                        this.props.updateUserList(data.items);\n                        this.props.updateButtonLoading(false);\n                    })\n                    .catch(err => {\n                        throw err;\n                    });\n            } catch (err) {\n                console.error(err);\n            }\n        }\n    };\n\n    render = (\n        { userList, buttonLoading, history, updateUser } = this.props\n    ) => {\n        return (\n            <div style={s.container}>\n                <div style={s.searchContainer}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Find a member...\"\n                        style={s.search}\n                        ref=\"search\"\n                    />\n                    <div style={s.searchIconContainer}>\n                        <img src={search} alt=\"Search\" style={s.searchIcon} />\n                    </div>\n                    <div style={{ width: \"250px\", height: \"35px\" }} />\n                    {buttonLoading ? (\n                        <Loader />\n                    ) : (\n                        <Button onClick={() => this.fetchData()}>Search</Button>\n                    )}\n                </div>\n                {userList.map((user, id) => (\n                    <UserDisplay\n                        key={id}\n                        user={user}\n                        history={history}\n                        updateUser={updateUser}\n                    />\n                ))}\n            </div>\n        );\n    };\n}\n\nexport default connect(\n    mapStateFromProps,\n    mapDispatchToProps\n)(IndexPage);\n","import React from \"react\";\n\nconst s = {\n    followButton: {\n        backgroundColor: \"#eff3f6\",\n        backgroundImage: \"linear-gradient(-180deg,#fafbfc,#eff3f6 90%)\",\n        border: \"1px solid rgba(27,31,35,.2)\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        color: \"#24292e\",\n        marginBottom: \"20px\",\n        cursor: \"pointer\"\n    }\n};\n\nconst log = () => console.log(\"button was clicked\");\n\nconst WhiteButton = ({ children, width, height, onClick = log }) => (\n    <div\n        style={{ ...s.followButton, width: width, height: height }}\n        onClick={() => onClick()}\n    >\n        {children}\n    </div>\n);\n\nexport default React.memo(WhiteButton);\n","import React from \"react\";\nimport WhiteButton from \"./WhiteButton\";\nimport star from \"../assets/star.svg\";\n\nconst s = {\n    container: {\n        padding: \"30px 0\",\n        borderTop: \"1px solid #33333320\",\n        display: \"flex\",\n        flexDirection: \"row\"\n    },\n    title: {\n        color: \"#0366d6\",\n        cursor: \"pointer\",\n        fontWeight: \"600\",\n        fontSize: \"20px\",\n        marginBottom: \"10px\"\n    },\n    description: {\n        color: \"#586069\",\n        fontSize: \"14px\",\n        lineHeight: \"1.5\",\n        maxWidth: \"500px\"\n    }\n};\n\nconst RepoDisplay = ({ repo }) => (\n    <div style={s.container}>\n        <div style={{ flex: 1 }}>\n            <div style={s.title}>{repo.name}</div>\n            <div style={s.description}>{repo.description}</div>\n        </div>\n        <WhiteButton width=\"70px\" height=\"28px\">\n            <div>\n                <img\n                    src={star}\n                    alt=\"star\"\n                    style={{ width: \"13px\", marginRight: \"5px\" }}\n                />\n                Star\n            </div>\n        </WhiteButton>\n    </div>\n);\n\nexport default React.memo(RepoDisplay);\n","import React from \"react\";\n\nconst s = {\n    container: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"row\"\n    },\n    imageContainer: {\n        width: \"30px\",\n        height: \"20px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        marginBottom: \"10px\"\n    },\n    text: {\n        flex: \"1\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginLeft: \"10px\",\n        textOverflow: \"ellipsis\",\n        lineHeight: \"1.5\",\n        fontSize: \"14px\"\n    },\n    link: {\n        color: \"#0366d6\",\n        cursor: \"pointer\"\n    }\n};\n\nconst InfoRow = ({ image, children, link }) => {\n    if (children) {\n        return (\n            <div style={s.container}>\n                <div style={s.imageContainer}>\n                    <img src={image} alt=\"info\" style={{ height: \"20px\" }} />\n                </div>\n                <div\n                    style={{ ...s.text, ...(link ? s.link : null) }}\n                    className={link ? \"link\" : \"\"}\n                >\n                    {children}\n                </div>\n            </div>\n        );\n    } else return null;\n};\n\nexport default React.memo(InfoRow);\n","import React from \"react\";\nimport tick from \"../assets/tick.svg\";\nimport tickWhite from \"../assets/tick-white.svg\";\n\nconst s = {\n    container: {\n        width: \"100%\",\n        height: \"35px\"\n    },\n    borderContainer: {\n        width: \"90%\",\n        borderBottom: \"1px solid #33333320\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        height: \"35px\"\n    },\n    selected: {\n        width: \"30px\",\n        height: \"35px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    option: {\n        flex: 1,\n        height: \"35px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\"\n    },\n    tick: {\n        width: \"13px\"\n    }\n};\n\nclass MenuItem extends React.Component {\n    state = {\n        hover: false\n    };\n    render = (\n        { children, selected, onClick } = this.props,\n        { hover } = this.state\n    ) => (\n        <div\n            style={s.container}\n            className=\"option\"\n            onMouseEnter={() => this.setState({ hover: true })}\n            onMouseLeave={() => this.setState({ hover: false })}\n            onClick={() => onClick()}\n        >\n            <div style={s.borderContainer}>\n                <div style={s.selected}>\n                    {selected ? (\n                        hover ? (\n                            <img src={tickWhite} alt=\"tick\" style={s.tick} />\n                        ) : (\n                            <img src={tick} alt=\"tick\" style={s.tick} />\n                        )\n                    ) : null}\n                </div>\n                <div style={s.option}>{children}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default MenuItem;\n","import React from \"react\";\nimport MenuItem from \"./MenuItem\";\n\nconst s = {\n    container: {\n        position: \"absolute\",\n        bottom: \"-205px\",\n        right: \"-1px\",\n        width: \"300px\",\n        height: \"175px\",\n        border: \"1px solid rgba(27,31,35,.15)\",\n        borderRadius: \"3px\",\n        boxShadow: \"0 3px 12px rgba(27,31,35,.15)\",\n        color: \"#586069\",\n        fontSize: \"12px\",\n        margin: \"4px 0 20px 0\",\n        backgroundColor: \"#fff\"\n    },\n    header: {\n        backgroundColor: \"#f6f8fa\",\n        borderBottom: \"1px solid #e1e4e8\",\n        lineHeight: \"16px\",\n        padding: \"8px 10px\",\n        color: \"#000\",\n        fontWeight: \"500\"\n    }\n};\n\nconst sortParameters = [\"created\", \"updated\", \"pushed\", \"full_name\"];\n\nclass Menu extends React.Component {\n    render({ sortOption, updateSelected } = this.props) {\n        return (\n            <div style={s.container}>\n                <div style={s.header}>Select sort parameter:</div>\n                {sortParameters.map((sortParameter, id) => (\n                    <MenuItem\n                        key={id}\n                        selected={sortOption === id}\n                        onClick={() => updateSelected(id)}\n                    >\n                        {sortParameter}\n                    </MenuItem>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default Menu;\n","import React from \"react\";\nimport Button from \"../components/Button\";\nimport WhiteButton from \"./WhiteButton\";\nimport Menu from \"./Menu\";\nimport { connect } from \"react-redux\";\n\nconst sortParameters = [\"created\", \"updated\", \"pushed\", \"full_name\"];\n\nconst mapStateFromProps = state => {\n    return state;\n};\n\nconst mapDispatchToProps = dispatch => ({\n    toggleMenu: menuState => {\n        dispatch({\n            type: \"MENU_STATE\",\n            menuState: menuState\n        });\n    },\n    updateSortParameter: async (sortParameter, selectedUser) => {\n        dispatch({\n            type: \"SORT_PARAMETER\",\n            sortParameter: sortParameter\n        });\n        dispatch({\n            type: \"MENU_STATE\",\n            menuState: false\n        });\n        try {\n            const res = await fetch(\n                `https://api.github.com/users/${\n                    selectedUser.login\n                }/repos?sort=${sortParameters[sortParameter]}`\n            );\n            const repos = await res.json();\n            dispatch({\n                type: \"REPOS\",\n                repos: repos\n            });\n        } catch (err) {\n            console.error(err);\n        }\n    }\n});\n\nclass ShowHeader extends React.Component {\n    state = {\n        showMenu: false\n    };\n    goBack = history => history.push(\"/\");\n\n    render = (\n        {\n            history,\n            sortParameter,\n            updateSortParameter,\n            menuState,\n            toggleMenu,\n            selectedUser\n        } = this.props\n    ) => {\n        return (\n            <div\n                style={{\n                    flex: 1,\n                    flexDirection: \"row\",\n                    display: \"flex\",\n                    justifyContent: \"space-between\"\n                }}\n            >\n                <Button onClick={() => this.goBack(history)}>Back</Button>\n                <div\n                    style={{\n                        width: \"200px\",\n                        height: \"35px\",\n                        position: \"relative\"\n                    }}\n                >\n                    <WhiteButton\n                        width=\"200px\"\n                        height=\"35px\"\n                        onClick={() => toggleMenu(!menuState)}\n                    >\n                        Sort: {sortParameters[sortParameter]}\n                    </WhiteButton>\n                    {menuState ? (\n                        <Menu\n                            sortOption={sortParameter}\n                            updateSelected={id =>\n                                updateSortParameter(id, selectedUser)\n                            }\n                        />\n                    ) : null}\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default connect(\n    mapStateFromProps,\n    mapDispatchToProps\n)(ShowHeader);\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport RepoDisplay from \"../components/RepoDisplay\";\nimport WhiteButton from \"../components/WhiteButton\";\nimport company from \"../assets/company.svg\";\nimport location from \"../assets/location.svg\";\nimport email from \"../assets/email.svg\";\nimport url from \"../assets/url-link.svg\";\n\nimport InfoRow from \"../components/InfoRow\";\nimport ShowHeader from \"../components/ShowHeader\";\n\nconst mapStateFromProps = state => {\n    console.log(state);\n    return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateUser: user =>\n            dispatch({\n                type: \"USER\",\n                user: user\n            }),\n        updateRepos: repos =>\n            dispatch({\n                type: \"REPOS\",\n                repos: repos\n            })\n    };\n};\n\nconst s = {\n    container: {\n        width: \"1000px\",\n        margin: \"50px auto\",\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    profileRepoContainer: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"row\"\n    },\n    profile: {\n        width: \"250px\",\n        padding: \"10px\",\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    repos: {\n        flex: 1,\n        padding: \"20px\"\n    },\n    avatar: {\n        width: \"100%\",\n        marginBottom: \"20px\",\n        borderRadius: \"10px\"\n    },\n    name: {\n        fontSize: \"26px\",\n        lineHeight: \"30px\",\n        fontWeight: \"600\"\n    },\n    login: {\n        fontSize: \"20px\",\n        color: \"#666\",\n        marginBottom: \"20px\"\n    },\n    followButton: {\n        width: \"100%\",\n        height: \"35px\",\n        backgroundColor: \"#eff3f6\",\n        backgroundImage: \"linear-gradient(-180deg,#fafbfc,#eff3f6 90%)\",\n        border: \"1px solid rgba(27,31,35,.2)\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        color: \"#24292e\",\n        marginBottom: \"20px\"\n    },\n    blockInfo: {\n        color: \"#24292e\",\n        fontSize: \"14px\",\n        lineHeight: \"1.5\",\n        paddingBottom: \"20px\",\n        marginBottom: \"20px\",\n        borderBottom: \"1px solid #33333320\"\n    }\n};\n\nconst sortParameters = [\"created\", \"updated\", \"pushed\", \"full_name\"];\n\nclass ShowPage extends React.Component {\n    state = {\n        message: \"Fetching User . . .\"\n    };\n    componentDidMount = async (\n        { selectedUser, sortParameter, updateUser, updateRepos } = this.props\n    ) => {\n        if (!!selectedUser) {\n            try {\n                const res = await fetch(\n                    `https://api.github.com/users/${selectedUser.login}`\n                );\n                const res1 = await fetch(\n                    `https://api.github.com/users/${\n                        selectedUser.login\n                    }/repos?sort=${sortParameters[sortParameter]}`\n                );\n                const user = await res.json();\n                updateUser(user);\n                const repos = await res1.json();\n                updateRepos(repos);\n            } catch (err) {\n                console.error(err);\n            }\n        } else {\n            this.setState({\n                message: \"User not found\"\n            });\n        }\n    };\n\n    render = (\n        { selectedUser, history, user, repos } = this.props,\n        { message } = this.state\n    ) => {\n        if (!!user) {\n            // const { avatar_url, id, repos_url } = selectedUser;\n            return (\n                <div style={s.container}>\n                    <ShowHeader history={history} />\n                    <div style={s.profileRepoContainer}>\n                        <div style={s.profile}>\n                            <img\n                                src={user.avatar_url}\n                                style={s.avatar}\n                                alt=\"user\"\n                            />\n                            <div style={s.name}>{user.name}</div>\n                            <div style={s.login}>{user.login}</div>\n                            <WhiteButton width=\"100%\" height=\"35px\">\n                                Follow\n                            </WhiteButton>\n                            <div style={s.blockInfo}>Block or report user</div>\n                            <InfoRow image={company}>{user.company}</InfoRow>\n                            <InfoRow image={location}>{user.location}</InfoRow>\n                            <InfoRow image={email} link>\n                                {user.email}\n                            </InfoRow>\n                            <InfoRow image={url} link>\n                                {user.blog}\n                            </InfoRow>\n                        </div>\n                        <div style={s.repos}>\n                            {repos.map((repo, id) => (\n                                <RepoDisplay key={id} repo={repo} />\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div style={s.container}>\n                    <ShowHeader history={history} />\n                    <div\n                        style={{\n                            margin: \"30px 0\",\n                            width: \"100%\",\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"center\"\n                        }}\n                    >\n                        {message}\n                    </div>\n                </div>\n            );\n        }\n    };\n}\n\nexport default connect(\n    mapStateFromProps,\n    mapDispatchToProps\n)(ShowPage);\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport IndexPage from \"./pages/index\";\nimport ShowPage from \"./pages/show\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <React.Fragment>\n                    <Router basename={process.env.PUBLIC_URL}>\n                        <React.Fragment>\n                            <Route exact path=\"/\" component={IndexPage} />\n                            <Route path=\"/user\" component={ShowPage} />\n                        </React.Fragment>\n                    </Router>\n                </React.Fragment>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}